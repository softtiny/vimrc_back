" line numbers
set number

" When unloading a buffer Vim normally destroys the tree of undos created for
" that buffer.  By setting the 'undofile' option, Vim will automatically save
" your undo history when you write a file and restore undo history when you edit
" the file again.
set undofile

" How to view UTF-8 Characters in VIM or Gvim
set fileencodings=utf-8,gbk,utf-16le,cp1252,iso-8859-15,ucs-bom
set termencoding=utf-8
set encoding=utf-8
set fileformats=unix,dos,mac

" To add the proper PEP 8 indentation, add the following to your .vimrc:
au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix
" This will give you the standard four spaces when you hit tab, ensure your line length doesn’t go beyond 80 characters, and store the file in a Unix format so you don’t get a bunch of conversion issues when checking into GitHub and/or sharing with other users.

" For full stack development, you can use another au command for each filetype:
au BufNewFile,BufRead *.js, *.html, *.css
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2
" Setting the cursor to a vertical thin line in vim
" set guicursor=i:ver25-iCursor


fu! SaveSess()
    execute 'mksession! ' . g:rootTmpPath . '/.session.vim'
endfunction

fu! RestoreSess()
if filereadable(g:rootTmpPath .'/.session.vim')
    execute 'so '.g:rootTmpPath.'/.session.vim'
    if bufexists(1)
        for l in range(1, bufnr('$'))
            if bufwinnr(l) == -1
                exec 'sbuffer ' . l
            endif
        endfor
    endif
endif
endfunction

autocmd VimLeave * call SaveSess()
autocmd VimEnter * nested call RestoreSess()
